services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                NEXT_PUBLIC_GITHUB_OWNER: meetearnest
        ports:
            - "3000:3000"
        env_file:
            - .env.production
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
            - NEXT_PUBLIC_GITHUB_OWNER=meetearnest
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ~/.aws/credentials:/home/nextjs/.aws/credentials:ro
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3000/api/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1G
                reservations:
                    cpus: "0.5"
                    memory: 512M

    postgres:
        image: ankane/pgvector:latest
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./init-scripts:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M
        command: ["postgres", "-c", "max_locks_per_transaction=128"]

volumes:
    postgres-data:
